{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\react\\\\demo\\\\src\\\\container\\\\Count\\\\optimizationCount.jsx\";\nimport React, { Component } from 'react'; // 引入connect用于连接UI组件与redux\n\nimport { connect } from 'react-redux';\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from '../../redux/count_action'; // 使用react-redux  整合UI组件和容器组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CountReactRedux extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.increment = () => {\n      const {\n        value\n      } = this.selectNumber;\n      this.props.increment(value * 1);\n    };\n\n    this.decrement = () => {\n      const {\n        value\n      } = this.selectNumber;\n      this.props.decrement(value * 1);\n    };\n\n    this.incrementIfOdd = () => {\n      const {\n        value\n      } = this.selectNumber;\n\n      if (this.props.count % 2 !== 0) {\n        this.props.increment(value * 1);\n      }\n    };\n\n    this.incrementAsync = () => {\n      const {\n        value\n      } = this.selectNumber;\n      this.props.incrementAsync(value * 1, 500);\n    };\n  }\n\n  render() {\n    const {\n      count\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\uFF1A\", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: c => this.selectNumber = c,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.decrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.incrementIfOdd,\n        children: \"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\\u5947\\u6570\\u518D\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.incrementAsync,\n        children: \"\\u5F02\\u6B65\\u76F8\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n} // 容器组件  充当一个桥梁的作用，在UI组件和redux之间进行传输\n\n/**\r\n * 1、传递给UI组件的函数  返回值是对象\r\n * 2、key作为传递给UI组件props的key value就作为props的value---状态\r\n * 3、mapStateToProps用于传递状态\r\n */\n\n/**\r\n * 1、传递给UI组件的函数  返回值是对象\r\n * 2、key作为传递给UI组件props的key value就作为props的value---状态\r\n * 3、mapDispatchToProps用于传递操作状态的方法\r\n */\n// 使用connect()()创建并暴露一个容器组件  编码上优化版的connect\n\n\nexport default connect(state => ({\n  count: state\n}), // mapDispatchTpProps的简写\n{\n  increment: createIncrementAction,\n  decrement: createDecrementAction,\n  incrementAsync: createIncrementAsyncAction\n})(CountReactRedux);","map":{"version":3,"sources":["C:/Users/react/demo/src/container/Count/optimizationCount.jsx"],"names":["React","Component","connect","createIncrementAction","createDecrementAction","createIncrementAsyncAction","CountReactRedux","increment","value","selectNumber","props","decrement","incrementIfOdd","count","incrementAsync","render","c","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,0BAHF,QAIO,0BAJP,C,CAKA;;;;AACA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEtCM,SAFsC,GAE1B,MAAM;AAChB,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKC,YAAvB;AACA,WAAKC,KAAL,CAAWH,SAAX,CAAqBC,KAAK,GAAG,CAA7B;AACD,KALqC;;AAAA,SAOtCG,SAPsC,GAO1B,MAAM;AAChB,YAAM;AAAEH,QAAAA;AAAF,UAAY,KAAKC,YAAvB;AACA,WAAKC,KAAL,CAAWC,SAAX,CAAqBH,KAAK,GAAG,CAA7B;AACD,KAVqC;;AAAA,SAYtCI,cAZsC,GAYrB,MAAM;AACrB,YAAM;AAAEJ,QAAAA;AAAF,UAAY,KAAKC,YAAvB;;AACA,UAAI,KAAKC,KAAL,CAAWG,KAAX,GAAmB,CAAnB,KAAyB,CAA7B,EAAgC;AAC9B,aAAKH,KAAL,CAAWH,SAAX,CAAqBC,KAAK,GAAG,CAA7B;AACD;AACF,KAjBqC;;AAAA,SAkBtCM,cAlBsC,GAkBrB,MAAM;AACrB,YAAM;AAAEN,QAAAA;AAAF,UAAY,KAAKC,YAAvB;AACA,WAAKC,KAAL,CAAWI,cAAX,CAA0BN,KAAK,GAAG,CAAlC,EAAqC,GAArC;AACD,KArBqC;AAAA;;AAuBtCO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA;AAAF,QAAY,KAAKH,KAAvB;AACA,wBACE;AAAA,8BACE;AAAA,2DAAWG,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,GAAG,EAAGG,CAAD,IAAQ,KAAKP,YAAL,GAAoBO,CAAzC;AAAA,gCACE;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,uBAQE;AAAQ,QAAA,OAAO,EAAE,KAAKT,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,uBASE;AAAQ,QAAA,OAAO,EAAE,KAAKI,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,uBAUE;AAAQ,QAAA,OAAO,EAAE,KAAKC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,uBAWE;AAAQ,QAAA,OAAO,EAAE,KAAKE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAxCqC,C,CA2CxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAeZ,OAAO,CACnBe,KAAD,KAAY;AACVJ,EAAAA,KAAK,EAAEI;AADG,CAAZ,CADoB,EAIpB;AACA;AACEV,EAAAA,SAAS,EAAEJ,qBADb;AAEEQ,EAAAA,SAAS,EAAEP,qBAFb;AAGEU,EAAAA,cAAc,EAAET;AAHlB,CALoB,CAAP,CAUbC,eAVa,CAAf","sourcesContent":["import React, { Component } from 'react'\r\n// 引入connect用于连接UI组件与redux\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  createIncrementAction,\r\n  createDecrementAction,\r\n  createIncrementAsyncAction,\r\n} from '../../redux/count_action'\r\n// 使用react-redux  整合UI组件和容器组件\r\nclass CountReactRedux extends Component {\r\n  // 加法\r\n  increment = () => {\r\n    const { value } = this.selectNumber\r\n    this.props.increment(value * 1)\r\n  }\r\n  // 减法\r\n  decrement = () => {\r\n    const { value } = this.selectNumber\r\n    this.props.decrement(value * 1)\r\n  }\r\n  // 奇数再加\r\n  incrementIfOdd = () => {\r\n    const { value } = this.selectNumber\r\n    if (this.props.count % 2 !== 0) {\r\n      this.props.increment(value * 1)\r\n    }\r\n  }\r\n  incrementAsync = () => {\r\n    const { value } = this.selectNumber\r\n    this.props.incrementAsync(value * 1, 500)\r\n  }\r\n\r\n  render() {\r\n    const { count } = this.props\r\n    return (\r\n      <div>\r\n        <h1>当前求和为：{count}</h1>\r\n        <select ref={(c) => (this.selectNumber = c)}>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n        </select>\r\n        &nbsp;\r\n        <button onClick={this.increment}>+</button>&nbsp;\r\n        <button onClick={this.decrement}>-</button>&nbsp;\r\n        <button onClick={this.incrementIfOdd}>当前求和为奇数再加</button>&nbsp;\r\n        <button onClick={this.incrementAsync}>异步相加</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// 容器组件  充当一个桥梁的作用，在UI组件和redux之间进行传输\r\n\r\n/**\r\n * 1、传递给UI组件的函数  返回值是对象\r\n * 2、key作为传递给UI组件props的key value就作为props的value---状态\r\n * 3、mapStateToProps用于传递状态\r\n */\r\n\r\n/**\r\n * 1、传递给UI组件的函数  返回值是对象\r\n * 2、key作为传递给UI组件props的key value就作为props的value---状态\r\n * 3、mapDispatchToProps用于传递操作状态的方法\r\n */\r\n\r\n// 使用connect()()创建并暴露一个容器组件  编码上优化版的connect\r\nexport default connect(\r\n  (state) => ({\r\n    count: state,\r\n  }),\r\n  // mapDispatchTpProps的简写\r\n  {\r\n    increment: createIncrementAction,\r\n    decrement: createDecrementAction,\r\n    incrementAsync: createIncrementAsyncAction,\r\n  }\r\n)(CountReactRedux)\r\n"]},"metadata":{},"sourceType":"module"}