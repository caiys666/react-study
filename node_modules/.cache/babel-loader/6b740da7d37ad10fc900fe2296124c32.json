{"ast":null,"code":"// 容器组件  充当一个桥梁的作用，在UI组件和redux之间进行传输\n// 引入UI组件\nimport CountUI from '../../components/count/CountReactRedux.jsx'; // 引入connect用于连接UI组件与redux\n\nimport { connect } from 'react-redux';\nimport { createIncrementAction, createDecrementAction, createIncrementAsyncAction } from '../../redux/count_action'; // 传递给UI组件的函数  返回值是对象  key作为传递给UI组件props的key\n// value就作为props的value---状态\n\nfunction mapStateToProps(state) {\n  return {\n    count: state\n  };\n} // 传递给UI组件的函数  返回值是对象  key作为传递给UI组件props的key\n// value就作为props的value---操作状态的方法\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    increment: data => {\n      // 通知redux执行操作  加法\n      dispatch(createIncrementAction(data));\n    },\n    decrement: data => {\n      dispatch(createDecrementAction(data));\n    },\n    incrementAsync: data => {\n      dispatch(createIncrementAsyncAction(data, 500));\n    }\n  };\n} // 使用connect()()创建并暴露一个容器组件\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI);","map":{"version":3,"sources":["C:/Users/react/demo/src/container/Count/index.jsx"],"names":["CountUI","connect","createIncrementAction","createDecrementAction","createIncrementAsyncAction","mapStateToProps","state","count","mapDispatchToProps","dispatch","increment","data","decrement","incrementAsync"],"mappings":"AAAA;AACA;AACA,OAAOA,OAAP,MAAoB,4CAApB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,0BAHF,QAIO,0BAJP,C,CAMA;AACA;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AAAEC,IAAAA,KAAK,EAAED;AAAT,GAAP;AACD,C,CAED;AACA;;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLC,IAAAA,SAAS,EAAGC,IAAD,IAAU;AACnB;AACAF,MAAAA,QAAQ,CAACP,qBAAqB,CAACS,IAAD,CAAtB,CAAR;AACD,KAJI;AAKLC,IAAAA,SAAS,EAAGD,IAAD,IAAU;AACnBF,MAAAA,QAAQ,CAACN,qBAAqB,CAACQ,IAAD,CAAtB,CAAR;AACD,KAPI;AAQLE,IAAAA,cAAc,EAAGF,IAAD,IAAU;AACxBF,MAAAA,QAAQ,CAACL,0BAA0B,CAACO,IAAD,EAAO,GAAP,CAA3B,CAAR;AACD;AAVI,GAAP;AAYD,C,CAED;;;AACA,eAAeV,OAAO,CAACI,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CR,OAA7C,CAAf","sourcesContent":["// 容器组件  充当一个桥梁的作用，在UI组件和redux之间进行传输\r\n// 引入UI组件\r\nimport CountUI from '../../components/count/CountReactRedux.jsx'\r\n\r\n// 引入connect用于连接UI组件与redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  createIncrementAction,\r\n  createDecrementAction,\r\n  createIncrementAsyncAction,\r\n} from '../../redux/count_action'\r\n\r\n// 传递给UI组件的函数  返回值是对象  key作为传递给UI组件props的key\r\n// value就作为props的value---状态\r\nfunction mapStateToProps(state) {\r\n  return { count: state }\r\n}\r\n\r\n// 传递给UI组件的函数  返回值是对象  key作为传递给UI组件props的key\r\n// value就作为props的value---操作状态的方法\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    increment: (data) => {\r\n      // 通知redux执行操作  加法\r\n      dispatch(createIncrementAction(data))\r\n    },\r\n    decrement: (data) => {\r\n      dispatch(createDecrementAction(data))\r\n    },\r\n    incrementAsync: (data) => {\r\n      dispatch(createIncrementAsyncAction(data, 500))\r\n    },\r\n  }\r\n}\r\n\r\n// 使用connect()()创建并暴露一个容器组件\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI)\r\n"]},"metadata":{},"sourceType":"module"}